/**
 * angular-PubSub
 * AngularJS implementation of the Publish/Subscribe pattern.
 * 
 * @version 1.0.0
 * @homepage https://github.com/georapbox/angular-PubSub
 * @repository git@github.com:georapbox/angular-PubSub.git
 * @license (MIT)
 */
!function(a){"use strict";a("PubSub",[]).factory("PubSub",["$timeout",function(a){function b(a){return function(){return this[a].apply(this,arguments)}}var c={topics:{},subUid:-1};return c.subscribe=function(a,b,c){var d=this.subUid+=1,e={};if("function"!=typeof b)throw new TypeError("When subscribing for an event, a callback function must be defined.");return this.topics[a]||(this.topics[a]=[]),e.token=d,e.callback=b,e.once=!!c,this.topics[a].push(e),d},c.subscribeOnce=function(a,b){return this.subscribe(a,b,!0)},c.publish=function(b,c){var d,e,f,g,h=this;return!!this.topics[b]&&(a(function(){for(e=h.topics[b],d=e?e.length:0;d;)d-=1,g=e[d].token,f=e[d],f.callback(c,{name:b,token:g}),f.once===!0&&h.unsubscribe(g)},0),!0)},c.unsubscribe=function(a){var b,c,d=!1;for(b in this.topics)if(Object.hasOwnProperty.call(this.topics,b)&&this.topics[b]){for(c=this.topics[b].length;c;){if(c-=1,this.topics[b][c].token===a)return this.topics[b].splice(c,1),a;b===a&&(this.topics[b].splice(c,1),d=!0)}if(d===!0)return a}return!1},c.on=b("subscribe"),c.once=b("subscribeOnce"),c.trigger=b("publish"),c.off=b("unsubscribe"),c}])}(angular.module);